[package]
name = "wasefire-protocol-usb"
version = "0.1.1-git"
authors = ["Julien Cretin <cretin@google.com>"]
license = "Apache-2.0"
publish = true
edition = "2021"
description = "Wasefire USB protocol between platform and host"
repository = "https://github.com/google/wasefire"
include = ["/LICENSE", "/src/"]
keywords = ["embedded", "framework", "no-std"]
categories = ["embedded", "no-std"]

[dependencies]
anyhow = { version = "1.0.86", default-features = false, features = ["std"], optional = true }
defmt = { version = "0.3.8", default-features = false, optional = true }
rusb = { version = "0.9.4", default-features = false, optional = true }
usb-device = { version = "0.3.2", default-features = false, optional = true }
wasefire-error = { version = "0.1.1", path = "../error", optional = true }
wasefire-logger = { version = "0.1.5", path = "../logger" }
wasefire-wire = { version = "0.1.0", path = "../wire", optional = true }

[dependencies.wasefire-board-api]
version = "0.7.1-git"
path = "../board"
features = ["api-platform-protocol"]
optional = true

[dependencies.wasefire-protocol]
version = "0.1.0"
path = "../protocol"
features = ["host"]
optional = true

[features]
defmt = ["dep:defmt", "wasefire-board-api?/defmt", "wasefire-error?/defmt", "wasefire-logger/defmt"]
log = ["wasefire-board-api?/log", "wasefire-logger/log"]
std = ["wasefire-board-api?/std"]
# Exactly one of host or device must be selected.
device = ["dep:usb-device", "dep:wasefire-board-api", "dep:wasefire-error"]
host = ["dep:anyhow", "dep:rusb", "dep:wasefire-protocol", "dep:wasefire-wire", "std"]

[lints]
clippy.unit-arg = "allow"
rust.unreachable-pub = "warn"
rust.unsafe-op-in-unsafe-fn = "warn"
rust.unused-crate-dependencies = "warn"
